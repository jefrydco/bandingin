service firebase.storage {
  function existingData() {
    return resource.data
  }

  function incomingData() {
    return request.resource.data
  }

  function currentUser() {
    return request.auth
  }

  function isSignedIn() {
    return request.auth != null;
  }
  
  function isOwner(userId) {
    return request.auth.uid == userId
  }

 match /b/{bucket}/o {
    match /images {
      match /{userId} {
        allow read, write: if isSignedIn() && isOwner(userId)
        
        // Cascade read to any image type at any path
          match /{allImages=**} {
            allow read;
          }

          // Allow write files to the path "images/*", subject to the constraints:
          // 1) File is less than 1MB
          // 2) Content type is an image
          // 3) Uploaded content type matches existing content type
          // 4) File name (stored in imageId wildcard variable) is less than 40 characters
          match /{imageId} {
            allow write: if request.resource.size < 1 * 1024 * 1024
                          && request.resource.contentType.matches('image/.*')
                          && imageId.size() == 40
          }
      }
    }
  }
}